<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>p2p</artifactId>
        <groupId>com.xyr.p2p</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>war</packaging>
    <dependencies>
        <dependency>
            <groupId>com.xyr.p2p</groupId>
            <artifactId>p2p_service</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
    </dependencies>
    <artifactId>p2p_jms</artifactId>

    <properties>
        <org.springframework.version>3.0.3.RELEASE</org.springframework.version>
        <org.slf4j.version>1.5.10</org.slf4j.version>
        <!--   Cargo release associated with the project  -->
        <myproject.name>p2p_jms</myproject.name>
        <cargo.project.groupid>${project.groupId}</cargo.project.groupid>
        <cargo.project.artifactid>p2p_jms</cargo.project.artifactid>
        <!--  Individually and configured to extract the file to activate profiles   -->
        <!--<catalina.home>${env.CATLINA_HOME}</catalina.home>--><!--D:\hudson_ci\hudson_dep_tools\Tomcat6.0-->
        <cargo.tomcat.manager.protocol>http</cargo.tomcat.manager.protocol>
        <cargo.tomcat.manager.hostname>106.14.149.59</cargo.tomcat.manager.hostname>
        <cargo.tomcat.manager.port>8080</cargo.tomcat.manager.port>
        <cargo.tomcat.manager.ajp.port>8009</cargo.tomcat.manager.ajp.port>
        <cargo.tomcat.manager.username>xyr</cargo.tomcat.manager.username>
        <cargo.tomcat.manager.password>root</cargo.tomcat.manager.password>
    </properties>

    <!--<build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <warName>
                        p2p_jms
                    </warName>
                </configuration>
            </plugin>

            &lt;!&ndash;tomcat运行插件通过cargo-maven2-plugin插件配置Tomcat自动发布（cargo:deploy）&ndash;&gt;
            <plugin>
                &lt;!&ndash; 指定插件名称及版本号 &ndash;&gt;
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven2-plugin</artifactId>
                <version>1.4.15</version>
                &lt;!&ndash; 插件的Tomcat6.x配置 &ndash;&gt;
                <configuration>
                    &lt;!&ndash;<wait>true</wait> &ndash;&gt;  &lt;!&ndash;是否说明，操作start、stop等后续操作必须等前面操作完成才能继续 &ndash;&gt;
                    <container>&lt;!&ndash; 容器的配置 &ndash;&gt;
                        <containerId>tomcat8x</containerId> &lt;!&ndash; 指定tomcat版本 &ndash;&gt;
                        <type>remote</type> &lt;!&ndash; 指定类型：standalone, installed等 &ndash;&gt;
                    </container>
                    <configuration> &lt;!&ndash; 具体的配置 &ndash;&gt;
                        <type>runtime</type>  &lt;!&ndash; 类型，existing:存在 &ndash;&gt;
                        <properties> &lt;!&ndash; 配置属性 &ndash;&gt;
                            &lt;!&ndash; 监听端口配置;方便远程调试 &ndash;&gt;
                            <cargo.jvmargs>
                                -Xdebug
                                -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005
                            </cargo.jvmargs>
                            <cargo.tomcat.manager.url>http://106.14.149.59:8080/manager</cargo.tomcat.manager.url>
                            <cargo.remote.username>xyr</cargo.remote.username>
                            <cargo.remote.password>root</cargo.remote.password>
                            <cargo.servlet.port>8080</cargo.servlet.port>
                            <cargo.hostname>106.14.149.59</cargo.hostname>
                            <cargo.tomcat.ajp.port>8009
                            </cargo.tomcat.ajp.port>                                   &lt;!&ndash; Tomcat密码 &ndash;&gt;
                        </properties>
                    </configuration>
                    <deployables>
                        &lt;!&ndash;  Specified in the deployable to deploy your  webapp &ndash;&gt;
                        <deployable>
                            &lt;!&ndash;  Options, Ping destination address to determine success or failure of the project address released   &ndash;&gt;
                            &lt;!&ndash;<pingURL>&ndash;&gt;
                            &lt;!&ndash;${cargo.tomcat.manager.protocol}://${cargo.tomcat.manager.hostname}:${cargo.tomcat.manager.port}/${myproject.name}&ndash;&gt;
                            &lt;!&ndash;</pingURL>&ndash;&gt;
                            &lt;!&ndash;  Options, Ping response time target address  ,  Default 20000 ms   &ndash;&gt;
                            &lt;!&ndash;<pingTimeout>300000</pingTimeout>&ndash;&gt;
                            <groupId>${cargo.project.groupid}</groupId>
                            <artifactId>${cargo.project.artifactid}</artifactId>
                            <type>war</type>
                            <properties>
                                <context>${myproject.name}</context>
                            </properties>
                        </deployable>
                    </deployables>

                </configuration>
                <executions>
                    &lt;!&ndash; 执行的动作 &ndash;&gt;
                    <execution>
                        <id>verify-deployer</id>
                        <phase>install</phase> &lt;!&ndash; 解析install &ndash;&gt;
                        <goals>
                            <goal>deployer-redeploy</goal>
                        </goals>
                    </execution>
                    &lt;!&ndash;<execution>&ndash;&gt;
                    &lt;!&ndash;<id>clean-deployer</id>&ndash;&gt;
                    &lt;!&ndash;<phase>clean</phase>&ndash;&gt;
                    &lt;!&ndash;<goals>&ndash;&gt;
                    &lt;!&ndash;<goal>deployer-undeploy</goal>&ndash;&gt;
                    &lt;!&ndash;</goals>&ndash;&gt;
                    &lt;!&ndash;</execution>&ndash;&gt;
                </executions>
            </plugin>
        </plugins>
    </build>-->

</project>